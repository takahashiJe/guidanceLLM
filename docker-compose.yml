# docker-compose.yml
# version: '3.8'

services:
  db-init:
    profiles: ["tools"]
    build:
      context: .
      dockerfile: Dockerfile
      target: development # デフォルトは開発ステージ
    env_file: .env
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
    volumes: [./backend:/app]
    command: ["python", "worker/app/init_db_script.py"]

  frontend:
    ports: ["8501:8501"]
    depends_on: [api_gateway]
    profiles: ["api"]

  api_gateway:
    env_file: .env
    depends_on: [redis, db]
    profiles: ["api"]

  worker:
    deploy:
      resources:
        reservations:
          devices: [{driver: nvidia, count: all, capabilities: [gpu]}]
    runtime: nvidia
    env_file: .env
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on: [ollama, redis, db, osrm, osrm-foot, nominatim]
    profiles: ["worker"]

  ollama:
    image: ollama/ollama:latest
    ports: ["11434:11434"]
    volumes: [ollama_data:/root/.ollama]
    deploy:
      resources:
        reservations:
          devices: [{driver: nvidia, count: all, capabilities: [gpu]}]
    runtime: nvidia
    profiles: ["worker"]

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]
    profiles: ["api", "worker"]

  db:
    image: postgres:15-alpine
    env_file: .env
    ports: ["5432:5432"]
    volumes: [postgres_data:/var/lib/postgresql/data]
    profiles: ["api", "worker"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  osrm:
    # ★★★ 修正点 ★★★
    image: osrm/osrm-backend:latest #
    ports: ["5000:5000"]
    volumes:
      - ./backend/worker/data/map/car:/data
    command: osrm-routed --algorithm mld /data/japan-latest.osrm
    profiles: ["worker"]

  osrm-foot:
    # ★★★ 修正点 ★★★
    image: osrm/osrm-backend:latest #
    ports: ["5001:5000"]
    volumes:
      - ./backend/worker/data/map/foot:/data
    command: osrm-routed --algorithm mld /data/japan-latest-foot.osrm
    profiles: ["worker"]

  nominatim:
    image: mediagis/nominatim:4.4
    ports: ["8080:8080"]
    environment:
      - PBF_PATH=/data/japan-latest.osm.pbf
      - REPLICATION_URL=http://download.geofabrik.de/asia/japan-updates
    volumes:
      - ./japan-latest.osm.pbf:/data/japan-latest.osm.pbf:ro
      - nominatim_data:/var/lib/postgresql/14/main
    depends_on: [db]
    profiles: ["worker"]

volumes:
  ollama_data:
  postgres_data:
  osrm_data:
  osrm_data_foot:
  nominatim_data: