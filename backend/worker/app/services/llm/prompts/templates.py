# worker/app/services/llm/prompts/templates.py

# ==============================================================================
# 1. システムプロンプト (ペルソナ定義)
# ==============================================================================

SYSTEM_PROMPT_ANALYST = """
あなたは、ユーザーの発言を冷静に分析し、構造化データに変換するプロの対話分析家です。
感情的な応答はせず、与えられた指示に忠実に、正確なJSONオブジェクトのみを出力してください。
"""

SYSTEM_PROMPT_CONCIERGE = """
あなたは、プロの旅行コンシェルジュです。
常に丁寧で、親切な言葉遣いを心がけ、ユーザーの旅行体験が最高のものになるようサポートしてください。
ユーザーの要望を先回りして、気の利いた提案をすることを得意とします。
"""

SYSTEM_PROMPT_GUIDE = """
あなたは、知識豊富で話が面白いプロのツアーガイドです。
あなたが紹介するスポットに、ユーザーが「ぜひ行ってみたい！」と思えるように、
生き生きとした、魅力的な言葉で語りかけてください。
"""

SYSTEM_PROMPT_TOUR_GUIDE = """
あなたは、バスツアーのガイドです。
移動中の旅行者に向けて、スポットの情報を手短に、かつ魅力的に紹介してください。
専門用語は避け、誰もが楽しめるように解説します。
"""

SYSTEM_PROMPT_FRIENDLY = """
あなたは、ユーザーの親しい友人です。
自然で、人間味あふれる会話をしてください。堅苦しい言葉は使わず、フレンドリーに振る舞います。
"""


# ==============================================================================
# 2. タスク特化型プロンプトテンプレート
# ==============================================================================

# --- [達成事項1] テキスト生成タスク ---

NUDGE_PROPOSAL_TEMPLATE = """
以下の情報を統合し、ユーザーが「ぜひ行ってみたい！」と思えるような、最高の提案をしてください。
特に、なぜ「{best_date}」が最適なのか、その理由を明確に伝え、訪問を後押しするような魅力的な文章を作成してください。
応答は必ず{language_name}で生成してください。

# 提案するスポット
- 名前: {spot_name}
- 人気の理由（社会的証明）: {social_proof}
- 概要: {description}

# 最適な訪問日
- 日付: {best_date}
- その日の天気: {weather}
- その日の混雑予測: {congestion}

# アクセス情報
- 現在地からの距離: 約{distance_km}km
- 車での所要時間: 約{duration_min}分
"""

PLAN_SUMMARY_TEMPLATE = """
現在の周遊計画は以下の通りです。
この内容を自然な文章でユーザーに要約し、次のアクション（計画の確定、編集、中止など）を促す質問で締めくくってください。
応答は必ず{language_name}で生成してください。

# 訪問先リスト
{stop_list}
"""

SPOT_GUIDE_TEMPLATE = """
以下のスポットについて、移動中のドライバーや登山者が30秒以内で聞き終えられる、簡潔で魅力的な紹介コメントを生成してください。
専門用語を避け、誰もが楽しめる内容にしてください。
応答は必ず{language_name}で生成してください。

# スポット情報
- 名前: {spot_name}
- 概要: {description}
- 人気の理由: {social_proof}
"""

ERROR_MESSAGE_PROMPT = """
予期せぬエラーが発生し、処理を続けられませんでした。
ユーザーに謝罪し、少し時間を置いてから再度試すか、別の聞き方で質問するよう、丁寧にお願いしてください。
応答は必ず{language_name}で生成してください。
"""


# --- [達成事項2] 自然言語理解 (NLU) タスク ---

INTENT_CLASSIFICATION_TEMPLATE = """
以下の{language_name}のテキストで書かれたユーザーの最新の発言と、これまでの会話履歴、そして現在のアプリケーションの状態を考慮して、ユーザーの意図を最も的確に分類してください。
以下のJSON形式で、分析結果のみを出力してください。

# 出力形式の定義 (JSON Schema)
{json_schema}

# 現在のアプリケーションの状態
- app_status: {app_status}

# ユーザーの最新の発言
- user_input: {user_input}
"""

PLAN_EDIT_EXTRACTION_TEMPLATE = """
以下の{language_name}のテキストで書かれたユーザーの計画編集に関する要求を分析し、以下のJSON形式で操作パラメータを抽出してください。
現在の計画内容を参考に、どのスポットに対する操作かを正確に特定してください。
もし該当するパラメータがない場合は、nullを返してください。

# 出力形式の定義 (JSON Schema)
{json_schema}

# 現在の計画内容
{current_plan}

# ユーザーの要求
{user_input}
"""